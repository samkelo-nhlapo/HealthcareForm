@{
    ViewBag.Title = "Home Page";
}
@using HealthcareForm.Models;

@model MainModel

<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>


@using (Html.BeginForm("SavePatient", "Home", FormMethod.Post, new { @id = "frmHome" }))
{
    <div class="form-group row">
        <label for="FirstName" class="col-sm-2 col-form-label">First Name</label>
        <div class="col-sm-10">
            @Html.TextBoxFor(x => x.FirstName, new { @class = "form-control", id = "FirstName", name = "dllFirstName" })
        </div>
    </div>

    <div class="form-group row">

        <label for="LastName" class="col-sm-2 col-form-label">Last Name</label>
        <div class="col-sm-10">
            @Html.TextBoxFor(x => x.LastName, new { @class = "form-control", id = "LastName", name = "dllLastName" })
        </div>
    </div>

    <div class="form-group row">

        <label for="ID_Number" class="col-sm-2 col-form-label">ID Number</label>
        <div class="col-sm-10">
            @Html.TextBoxFor(x => x.ID_Number, new { @class = "form-control", id = "ID_Number", name = "dllIDNumber" })
        </div>
    </div>

    <div class="form-group row">

        <label for="DateOfBirth" class="col-sm-2 col-form-label">Date Of Birth</label>
        <div class="col-sm-10">
            @Html.TextBoxFor(x => x.DateOfBirth, "{0:dd/MM/yyyy}", new { @class = "form-control", id = "DateOfBirth", name = "DOBirth" })
        </div>
    </div>

    <div class="form-group row">
        <label for="dllGetGender" class="col-sm-2 col-form-label">Gender</label>
        <div class="col-sm-10">
            @Html.DropDownListFor(x => x.GenderIDFK, new List<SelectListItem>()
            {
                new SelectListItem()
                {
                    Value = Model.GenderIDFK,
                    Text = Model.GenderDescription,
                    Selected = true
                }
            }, "0", new { @class = "form-control", id = "dllGetGender", name = "Gender" })

        </div>

    </div>

    <div class="form-group row">
        <label for="dllPhoneNumber" class="col-sm-2 col-form-label">Phone number</label>
        <div class="col-sm-10">
            @Html.TextBoxFor(x => x.PhoneNumber, new { @class = "form-control", id = "dllPhoneNumber", name = "PhoneN" })
        </div>
    </div>

    <div class="form-group row">
        <label for="dllEmail" class="col-sm-2 col-form-label">Email</label>
        <div class="col-sm-10">
            @Html.TextBoxFor(x => x.Email, new { @class = "form-control", id = "dllEmail", name = "Email" })
        </div>
    </div>

    <div class="form-group row">
        <label for="dllLine1" class="col-sm-2 col-form-label">Line 1</label>
        <div class="col-sm-10">
            @Html.TextBoxFor(x => x.Line1, new { @class = "form-control", id = "dllLine1", name = "Line1" })
        </div>
    </div>

    <div class="form-group row">
        <label for="dllLine2" class="col-sm-2 col-form-label">Line 2</label>
        <div class="col-sm-10">
            @Html.TextBoxFor(x => x.Line2, new { @class = "form-control", id = "dllLine2", name = "Line2" })
        </div>
    </div>

    <div class="form-group row">
        <label for="dllGetCities" class="col-sm-2 col-form-label">City</label>
        <div class="col-sm-10">
            @Html.DropDownListFor(x => x.CityIDFK, new List<SelectListItem>()
                {
                    new SelectListItem()
                    {
                        Value = Model.CityIDFK,
                        Text = Model.CityName,
                        Selected = true
                    }
                }, "0", new { @class = "form-control", id = "dllGetCities", name = "Cities" })
        </div>
    </div>

    <div class="form-group row">
        <label for="dllGetProvinces" class="col-sm-2 col-form-label">Province</label>
        <div class="col-sm-10">

            @Html.DropDownListFor(x => x.ProvinceIDFK, new List<SelectListItem>()
                {
                    new SelectListItem()
                    {
                        Value = Model.ProvinceIDFK,
                        Text = Model.ProvinceName,
                        Selected = true
                    }
                }, "0", new { @class = "form-control", id = "dllGetProvinces", name = "Provinces" })
        </div>
    </div>

    <div class="form-group row">
        <label for="dllGetCountries" class="col-sm-2 col-form-label">Countries</label>
        <div class="col-sm-10">

            @Html.DropDownListFor(x => x.CountryIDFK, new List<SelectListItem>()
                {
                    new SelectListItem()
                    {
                        Value = Model.CountryIDFK,
                        Text = Model.CountryName,
                        Selected = true
                    }
                }, "0", new { @class = "form-control", id = "dllGetCountries", name = "Countries" })
        </div>
    </div>

    <div class="form-group row">
        <label for="dllGetMaritalStatus" class="col-sm-2 col-form-label">Marital Status</label>
        <div class="col-sm-10">

            @Html.DropDownListFor(x => x.MaritalStatusIDFK, new List<SelectListItem>()
                {
                    new SelectListItem()
                    {
                        Value = Model.MaritalStatusIDFK,
                        Text = Model.MaritalStatusDescription,
                        Selected = true
                    }
                }, "0", new { @class = "form-control", id = "dllGetMaritalStatus", name = "MaritalStatus" })

        </div>
    </div>

    <div class="form-group row">
        <label for="dllEmergencyName" class="col-sm-2 col-form-label">Emergency Name</label>
        <div class="col-sm-10">
            @Html.TextBoxFor(x => x.EmergencyName, new { @class = "form-control", id = "dllEmergencyName", type = "textarea", name = "EmergencyName" })
        </div>
    </div>

    <div class="form-group row">
        <label for="dllEmergencyLastName" class="col-sm-2 col-form-label">Emergency last Name</label>
        <div class="col-sm-10">
            @Html.TextBoxFor(x => x.EmergencyLastName, new { @class = "form-control", id = "dllEmergencyLastName", name = "EmergencyLastName" })
        </div>
    </div>

    <div class="form-group row">
        <label for="dllEmergencyPhoneNumber" class="col-sm-2 col-form-label">Emergency Phone Number</label>
        <div class="col-sm-10">
            @Html.TextBoxFor(x => x.EmergencyPhoneNumber, new { @class = "form-control", id = "dllEmergencyPhoneNumber", name = "EmergencyPhoneNumber" })
        </div>
    </div>

    <div class="form-group row">
        <label for="dllRelationship" class="col-sm-2 col-form-label">Relationship</label>
        <div class="col-sm-10">

            @Html.TextBoxFor(x => x.Relationship, new { @class = "form-control", id = "dllRelationship", name = "Relationship" })

        </div>
    </div>

    <div class="form-group row">
        <label for="dllEmergancyDateOfBirth" class="col-sm-2 col-form-label">Date Of Birth</label>
        <div class="col-sm-10">

            @Html.TextBoxFor(x => x.EmergancyDateOfBirth, "{0:dd/MM/yyyy}", new { @class = "form-control", id = "dllEmergancyDateOfBirth", name = "EDateofbirth" })

        </div>
    </div>

    <div class="form-group row">
        <label for="dllMedicationList" class="col-sm-2 col-form-label">Medication List</label>
        <div class="col-sm-10">
            @Html.TextAreaFor(x => x.MedicationList, new { @class = "form-control", id = "dllMedicationList", rows = "3", name = "MedicationList" })
        </div>

    </div>

    //Save Data
    <input type="button" value="Submit" class="btn btn-primary" onclick="SaveButton()" />

}

<script type="text/javascript">
    $(document).ready(function () {

        $.ajax({
            url: "/DropDown/GetGender",
            dataType: "json",
            cache: true,
            async: true,
            global: false,
            success: function (data) {

                var items = '<option value ="' + '0' + '">' + 'Select status' + '</option>';
                $.each(data, function (i, value) {

                    items += '<option value ="' + value.GenderIDFK + '">' + value.GenderDescription + '</option>';
                    $('#dllGetGender').html(items);
                })

            },
            error: function (xhr) {
                alert("Gender not successful");
            }
        })

        $.ajax
            ({
                url: "/DropDown/GetCities",
                dataType: "json",
                cache: true,
                async: true,
                global: false,
                success: function (data) {

                    var items = '<option value ="' + '0' + '">' + 'Select City' + '</option>';
                    $.each(data, function (i, value) {

                        items += '<option value ="' + value.CityIDFK + '">' + value.CityName + '</option>';
                        $('#dllGetCities').html(items);
                    })
                },
                error: function (xhr, response) {
                    alert("Cities is not successful");
                }
            })

        $.ajax
            ({
                url: "/DropDown/GetCountries",
                dataType: "json",
                cache: true,
                async: true,
                global: false,
                success: function (data) {

                    var items = '<option value ="' + '0' + '">' + 'Select Country' + '</option>';

                    $.each(data, function (i, value) {

                        items += '<option value ="' + value.CountryIDFK + '">' + value.CountryName + '</option>';
                        $('#dllGetCountries').html(items);
                    })
                },
                error: function (response, xhr) {
                    alert("Countries is not successful");
                }
            })

        $.ajax
            ({

                url: "/DropDown/GetProvinces",
                dataType: "json",
                cache: true,
                async: true,
                global: false,
                success: function (data) {

                    var items = '<option value ="' + '0' + '">' + 'Select Province' + '</option>';

                    $.each(data, function (i, value) {

                        items += '<option value ="' + value.ProvinceIDFK + '">' + value.ProvinceName + '</option>';
                        $('#dllGetProvinces').html(items);
                    })
                },
                error: function (xhr) {
                    alert("Provinces Not successfull")
                }
            })

        $.ajax
            ({
                url: "/DropDown/GetMeritalStatus",
                dataType: "json",
                cache: true,
                async: true,
                global: false,
                success: function (data) {

                    var items = '<option value ="' + '0' + '">' + 'Select Merital Status' + '</option>';
                    $.each(data, function (index, value) {

                        items += '<option value ="' + value.MaritalStatusIDFK + '">' + value.MaritalStatusDescription + '</option>';

                        $('#dllGetMaritalStatus').html(items);
                    })
                },
                error: function (xhr) {
                    alert("Marital status not successfull ");
                }
            })
    })
</script>

<script>
    function SaveButton() {

        debugger
        $.ajax({
            type: "POST",
            url: "/AddPatient/AddPatient",
            data: $("#frmHome").serialize(),   //.serializa() creates a text string in standard URL-encoded notation
            dataType: 'json',
            success: function (data) {

                alert("Patient Saved successfully");
            },
            error: function (xhr, value, response, data) {

                alert(" value from value: " + value.responseText);
                alert("Response from response: " + response.responseText);
            }
        })
    }
</script>